<Window x:Class="Cloudmp3.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:conv="clr-namespace:Cloudmp3.ValueConverters"
        xmlns:comm="clr-namespace:Cloudmp3.Commands"
        Title="Cloud Sound" Height="660" Width="850">
    <Window.Resources>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Foreground" Value="Black"/>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
		        SnapsToDevicePixels="True">
                            <Border.Background>
                                <SolidColorBrush Color="Black"/>
                            </Border.Background>
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1"
			ItemsPanel="{TemplateBinding ItemsPanel}"
			SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <DataGridDetailsPresenter Grid.Row="1"
			Grid.Column="1"
			SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding 
 AreRowDetailsFrozen,
  ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
			  Converter={x:Static DataGrid.RowDetailsScrollingConverter},
			  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
			Visibility="{TemplateBinding DetailsVisibility}" />
                                <DataGridRowHeader Grid.RowSpan="2"
			SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
			Visibility="{Binding HeadersVisibility,
ConverterParameter={x:Static DataGridHeadersVisibility.Row},
   Converter={x:Static DataGrid.HeadersVisibilityConverter},
    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border x:Name="border"
			Background="Transparent"
			BorderBrush="Transparent"
			BorderThickness="1"
			SnapsToDevicePixels="True">

                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="Mp3Buttons">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <!--<Setter Property="Margin" Value="5,5"/>-->
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Label" x:Key="Timer">
            <Setter Property="Width" Value="45"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="Volume" TargetType="{x:Type Slider}">
            <Setter Property="Background" Value="#7F000000"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <ControlTemplate.Resources>
                            <Style TargetType="{x:Type RepeatButton}">
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <PathGeometry x:Key="Triangle">
                                <PathFigure StartPoint="0,1">
                                    <LineSegment Point="1,1"/>
                                    <LineSegment Point="1,0"/>
                                    <LineSegment Point="0,1"/>
                                </PathFigure>
                            </PathGeometry>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Grid>
                                <Grid.OpacityMask>
                                    <DrawingBrush>
                                        <DrawingBrush.Drawing>
                                            <GeometryDrawing Brush="Black" Geometry="{StaticResource Triangle}"/>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Grid.OpacityMask>
                                <Track Name="PART_Track" Value="{TemplateBinding Value}">
                                    <Track.Thumb>
                                        <Thumb Width="10" Background="{TemplateBinding Background}">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="{TemplateBinding Background}"/>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Background="{TemplateBinding Background}" Command="Slider.DecreaseLarge"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Background="Transparent" Command="Slider.IncreaseLarge"/>
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                            <Path
                        Data="{StaticResource Triangle}"
                        Stretch="Fill"
                        Stroke="Black"
                        StrokeThickness="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Image x:Key="PlayImg" Source="/Images/Play.png"/>
        <Image x:Key="StopImg" Source="/Images/Stop.png"/>
        <Image x:Key="PrevImg" Source="/Images/Previous.png"/>
        <Image x:Key="NextImg" Source="/Images/Next.png"/>
        <conv:MetaDataDurationConverter x:Key="MilisToSec"/>
        <conv:TimerDurationConverter x:Key="TimerConverter"/>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static comm:Commands.Login}"
                        CanExecute="LoginCanExecute"
                        Executed="LoginExecuted"/>
        <CommandBinding Command="{x:Static comm:Commands.Logout}"
                        CanExecute="LogoutCanExecute"
                        Executed="LogoutExecuted"/>
        <CommandBinding Command="{x:Static comm:Commands.DownloadSong}"
                        CanExecute="DownloadSongCanExecute"
                        Executed="DownloadSongExecuted"/>
        <CommandBinding Command="{x:Static comm:Commands.UploadSong}"
                        CanExecute="UploadSongCanExecute"
                        Executed="UploadSongExecuted"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="540"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="590"/>
        </Grid.RowDefinitions>
        <Menu Grid.ColumnSpan="2">
            <MenuItem Header="Account">
                <MenuItem Header="Log In"
                          Command="{x:Static comm:Commands.Login}"/>
                <MenuItem Header="Log Out"
                          Command="{x:Static comm:Commands.Logout}"/>
            </MenuItem>
            <MenuItem Header="Songs">
                <MenuItem Header="Upload Song"
                          Command="{x:Static comm:Commands.UploadSong}"/>
                <MenuItem Header="Download Song"
                          Command="{x:Static comm:Commands.DownloadSong}"/>
            </MenuItem>
        </Menu>
        <StackPanel Orientation="Horizontal" Grid.Column="1" x:Name="PlayerGrid">
            <Button x:Name="PlayButton" Content="{StaticResource PlayImg}"
                            Style="{StaticResource Mp3Buttons}" Click="Play_Click"/>
            <Button x:Name="StopButton" Content="{StaticResource StopImg}"
                           Style="{StaticResource Mp3Buttons}" Click="Stop_Click"/>
            <Button x:Name="PreviousButton" Content="{StaticResource PrevImg}"
                            Style="{StaticResource Mp3Buttons}" Click="Previous_Click"/>
            <Button x:Name="NextButton" Content="{StaticResource NextImg}"
                            Style="{StaticResource Mp3Buttons}" Click="Next_Click"/>
            <Slider Style="{StaticResource Volume}" Width="100" Minimum="0" Maximum="1"
                    TickFrequency=".05"
                    IsSnapToTickEnabled="True" Value="{Binding Path=Volume}"/>
            <Label x:Name="CurrentTime"
                               Content="{Binding Path=ElapsedMiliseconds, Converter={StaticResource TimerConverter}}"
                               Width="45"
                               Margin="5,0"
                               HorizontalContentAlignment="Center"
                               VerticalAlignment="Center"/>
            <ProgressBar Width="220" Minimum="0" Maximum="1000" Value="{Binding Path=SongProgress}"
                               HorizontalAlignment="Center"
                               Height="15"
                               x:Name="SongBar"
                               VerticalAlignment="Center"/>
            <Label x:Name="TotalTime" 
                               Content="{Binding Path=SongLength, Converter={StaticResource TimerConverter}}"
                               HorizontalAlignment="Right"
                               VerticalContentAlignment="Center"/>
        </StackPanel>
        <StackPanel Background="White" Grid.Row="1" Grid.Column="1">
            <DataGrid x:Name="SongDataGrid" SelectionMode="Single"
                              IsReadOnly="True" AutoGenerateColumns="False" Margin="2,0,-2,0">
                <DataGrid.Resources>
                    <Style TargetType="DataGridRow">
                        <EventSetter Event="MouseDoubleClick" Handler="Song_MouseDoubleClick"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Artist" Binding="{Binding S_Artist}"/>
                    <DataGridTextColumn Header="Title" Binding="{Binding S_Title}"/>
                    <DataGridTextColumn Header="Length" Binding="{Binding S_Length, Converter={StaticResource MilisToSec}}"/>
                </DataGrid.Columns>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Add to Existing Playlist" Click="AddSongToPlaylist_Click"/>
                        <MenuItem Header="Remove from Playlist" Click="RemoveSongFromPlaylist_Click"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
            </DataGrid>
            <Popup x:Name="AddSongToPlaylistPopup" IsOpen="False" Placement="Center">
                <Grid Background="BlanchedAlmond">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <ComboBox Grid.Row="0" x:Name="ChoosePlaylist" ItemsSource="{Binding Path=userPlaylists}"/>
                    <StackPanel Orientation="Horizontal" Grid.Row="1">
                        <Button Click="AddToPlaylist_Click">Add Playlist</Button>
                        <Button Click="CloseAddSongToPlaylistPopup_Click">Cancel</Button>
                    </StackPanel>
                </Grid>
            </Popup>
        </StackPanel>
        <StackPanel Grid.Row="1">
            <StackPanel x:Name="NotificationsPanel">
                <Label x:Name="NotificationsLabel"
                    Content="{Binding notificatioN}"
                     />
            </StackPanel>
            <Button Content="Add Playlist" Click="AddPlaylistPopup_Click"/>
            <Popup x:Name="AddPlaylistPopup" IsOpen="False" Placement="Center">
                <Grid Background="BlanchedAlmond">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBox x:Name="PlaylistNameBox" Grid.Row="0"/>
                    <StackPanel Orientation="Horizontal" Grid.Row="1">
                        <Button Click="AddList_Click">Add Playlist</Button>
                        <Button Click="ClosePlaylistPopup_Click">Cancel</Button>
                    </StackPanel>
                </Grid>
            </Popup>
            <Popup x:Name="RenamePlaylistPopup" IsOpen="False" Placement="Center">
                <Grid Background="BlanchedAlmond">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBox x:Name="PlaylistRenameBox" Grid.Row="0"/>
                    <StackPanel Orientation="Horizontal" Grid.Row="1">
                        <Button Click="RenameList_Click">Rename</Button>
                        <Button Click="CloseRenamePopup_Click">Cancel</Button>
                    </StackPanel>
                </Grid>
            </Popup>
            <ListBox x:Name="PlaylistBox">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Label Content="{Binding Path=userPlaylists}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Rename Playlist" Click="RenamePlaylist_Click"/>
                        <MenuItem Header="Remove Playlist" Click="RemovePlaylist_Click"/>
                    </ContextMenu>
                </ListBox.ContextMenu>
            </ListBox>
        </StackPanel>
        
    </Grid>
</Window>
